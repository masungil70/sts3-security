<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
CREATE TABLE `member` (
	`id` BIGINT(20) NOT NULL AUTO_INCREMENT,
	`email` VARCHAR(200) NULL DEFAULT NULL COLLATE 'utf8mb4_unicode_ci',
	`pwd` VARCHAR(200) NULL DEFAULT NULL COLLATE 'utf8mb4_unicode_ci',
	`roles` VARCHAR(200) NOT NULL DEFAULT 'USER' COLLATE 'utf8mb4_unicode_ci',
	`accountExpired` CHAR(1) NOT NULL DEFAULT 'N' COLLATE 'utf8mb4_unicode_ci',
	`accountLocked` CHAR(1) NOT NULL DEFAULT 'N' COLLATE 'utf8mb4_unicode_ci',
	`loginCount` INT(11) NOT NULL DEFAULT '0',
	`last_login_time` TIMESTAMP NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
	`register_time` TIMESTAMP NOT NULL DEFAULT current_timestamp(),
	`update_time` TIMESTAMP NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
	PRIMARY KEY (`id`) USING BTREE,
	UNIQUE INDEX `email` (`email`) USING BTREE
)
COLLATE='utf8mb4_unicode_ci'
ENGINE=InnoDB
;

INSERT INTO `member` (`id`, `email`, `pwd`, `roles`, `accountExpired`, `accountLocked`, `loginCount`, `last_login_time`, `register_time`, `update_time`) VALUES (1, 'user1@aaa.com', '$2a$10$2MAxReSFjt2430lvo.EkQ.PqITg/RXgtCCSqVhyBljgGIFL0Y3m3q', 'MEMBER', 'N', 'N', 0, '2024-04-10 23:58:36', '2023-10-10 21:14:56', '2024-04-10 23:58:36');
INSERT INTO `member` (`id`, `email`, `pwd`, `roles`, `accountExpired`, `accountLocked`, `loginCount`, `last_login_time`, `register_time`, `update_time`) VALUES (2, 'user2@aaa.com', '$2a$10$2MAxReSFjt2430lvo.EkQ.PqITg/RXgtCCSqVhyBljgGIFL0Y3m3q', 'ADMIN', 'N', 'N', 0, '2023-11-03 14:32:11', '2023-10-13 13:55:06', '2023-11-03 14:32:11');


 -->
<mapper namespace="kr.or.kosa.mapper.MemberDAO">

	<update id="updateMemberLastLogin">
		update member set 
			last_login_time = now()
		where email = #{email}  
	</update>
	
	<select id="findByEmail" resultType="MemberVO">
		select 
			*
		from member
		where email = #{email} 
	</select> 
   
   	<insert id="insert" >
   		<selectKey order="AFTER" keyProperty="id" resultType="long">
   			select LAST_INSERT_ID() id
   		</selectKey>
   		
		insert into member (
			email, pwd
		) values (
			#{email}, #{pwd}
		) 
	</insert>
	
	<update id="loginCountInc">
		update member set 
			loginCount = loginCount + 1
			<choose>
				<when test="loginCount > 2">
					, accountLocked = 'Y'
				</when>
				<otherwise>
					, accountLocked = 'N'
				</otherwise>
			</choose>
		where email = #{email} 
	</update> 

	 
	<update id="loginCountClear">
		update member set 
			 loginCount = 0 
			,accountLocked = 'N'
		where email = #{email} 
	</update> 
   
    <insert id="insertMember" >
      <selectKey order="AFTER" keyProperty="id" resultType="long">
        select LAST_INSERT_ID() id
      </selectKey>
      
    insert into member (
       email
      ,pwd
    ) values (
      #{email}
      ,#{pwd}
    ) 
  </insert>
   
    <update id="updateMember" >
    	update member set 
       	pwd = #{pwd}
      <if test="roles != null and roles != '' ">
        ,roles = #{roles}
      </if>
    where email = #{email}
  </update>
     
</mapper>